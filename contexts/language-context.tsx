"use client"

import { createContext, useContext, useState, useEffect, type ReactNode } from "react"

type Language = {
  code: string
  name: string
  flag: string
}

type Translations = {
  [key: string]: string
}

type LanguageContextType = {
  currentLanguage: Language
  languages: Language[]
  setLanguage: (language: Language) => void
  t: (key: string) => string
}

// Available languages
export const languages: Language[] = [
  { code: "en", name: "English", flag: "üá¨üáß" },
  { code: "hi", name: "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)", flag: "üáÆüá≥" },
  { code: "bn", name: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ (Bengali)", flag: "üáßüá©" },
  { code: "as", name: "‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ (Assamese)", flag: "üáÆüá≥" },
  { code: "ta", name: "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç (Tamil)", flag: "üáÆüá≥" },
  { code: "te", name: "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å (Telugu)", flag: "üáÆüá≥" },
  { code: "mr", name: "‡§Æ‡§∞‡§æ‡§†‡•Ä (Marathi)", flag: "üáÆüá≥" },
  { code: "ngl", name: "‡§®‡§æ‡§ó‡§æ‡§≤‡•à‡§Ç‡§° (Nagaland)", flag: "üáÆüá≥" },
  { code: "mni", name: "‡¶Æ‡ßà‡¶§‡ßà‡¶≤‡ßã‡¶®‡ßç (Manipuri)", flag: "üáÆüá≥" },
  { code: "miz", name: "Mizo ·π≠awng (Mizo)", flag: "üáÆüá≥" },
]

// Translations for different languages
const translations: Record<string, Translations> = {
  en: {
    // Dashboard
    dashboard: "Dashboard",
    dashboard_description: "Overview of your livestock health, location, and productivity metrics",
    loading_dashboard: "Loading Dashboard",
    loading_dashboard_description: "Fetching the latest data from your livestock...",
    total_livestock: "Total Livestock",
    health_status: "Health Status",
    recent_alerts: "Recent Alerts",
    iot_devices: "IoT Devices",
    online: "Online",
    offline: "Offline",
    battery_low: "Battery Low",
    healthy: "Healthy",
    warning: "Warning",
    alert: "Alert",
    view_all: "View All",
    view_all_alerts: "View all alerts",
    refresh_data: "Refresh Data",
    refreshing: "Refreshing...",
    data_refreshed: "Data Refreshed",
    data_refreshed_description: "The latest data has been loaded successfully.",
    add_livestock: "Add Livestock",
    add_livestock_description: "Add new livestock to your inventory",
    add_animal: "Add Animal",
    add_new: "Add New",

    // Health Monitoring
    health_monitoring: "Health Monitoring",
    health_monitoring_description: "Real-time health metrics from IoT sensors attached to your livestock",
    health_metrics: "Health Metrics",
    health_metrics_description: "Detailed health metrics for your livestock",
    health_metrics_overview: "Health Metrics Overview",
    health_metrics_overview_description: "Overview of health metrics across all your livestock",
    temperature: "Temperature",
    heart_rate: "Heart Rate",
    activity: "Activity",
    stress: "Stress Level",
    temperature_distribution: "Temperature Distribution",
    temperature_distribution_description: "Distribution of temperature readings across your livestock",
    heart_rate_distribution: "Heart Rate Distribution",
    heart_rate_distribution_description: "Distribution of heart rate readings across your livestock",
    export_health_data: "Export Health Data",
    schedule_checkup: "Schedule Checkup",
    of_total: "of total",
    overview: "Overview",
    health_issues: "Health Issues",
    health_history: "Health History",
    animals_with_health_issues: "Animals with Health Issues",
    animals_with_health_issues_description: "List of animals that require attention due to health issues",
    all_animals_healthy: "All Animals Healthy",
    all_animals_healthy_description: "There are no animals with health issues at the moment",
    health_check_history: "Health Check History",
    health_check_history_description: "History of health checks performed on your livestock",
    routine_health_check: "Routine Health Check",
    animals_checked: "Animals checked",
    completed: "Completed",
    performed_by: "Performed by",
    view_report: "View Report",

    // Location Tracking
    location_tracking: "Location Tracking",
    location_tracking_description: "Real-time location data and geo-fence monitoring for your livestock",
    current_location: "Current Location",
    current_location_description: "Current location of your livestock",
    live_map: "Live Map",
    boundary_alerts: "Boundary Alerts",
    movement_history: "Movement History",
    total_animals_tracked: "Total Animals Tracked",
    with_active_trackers: "With active trackers",
    inside_boundary: "Inside Boundary",
    outside_boundary: "Outside Boundary",
    live_location_map: "Live Location Map",
    live_location_map_description: "Real-time map showing the location of your livestock",
    boundary_alerts_description: "Alerts for animals that have crossed geo-fence boundaries",
    movement_history_description: "Historical movement data for your livestock",
    all_animals_inside_boundary: "All Animals Inside Boundary",
    all_animals_inside_boundary_description: "There are no animals outside the geo-fence boundaries at the moment",
    since: "Since",
    locate: "Locate",
    last_updated: "Last updated",
    track_now: "Track Now",
    view_history: "View History",
    export_location_data: "Export Location Data",
    add_geofence: "Add Geofence",

    // Vet Network
    vet_network: "Vet Network",
    vet_network_description: "Connect with veterinarians and get timely assistance for your livestock",

    // AI Insights
    ai_insights: "AI Insights",
    ai_insights_title: "AI Insights: Predicts disease, optimizes breeding, and boosts livestock productivity",
    ai_insights_description: "Advanced analytics and AI-powered insights to improve your livestock management",

    // Analytics
    analytics: "Analytics",
    analytics_description: "Comprehensive analytics and reports for your livestock farm",
    livestock_distribution: "Livestock Distribution",
    livestock_distribution_description: "Breakdown of your livestock by category and health status",
    productivity_trends: "Productivity Trends",
    productivity_trends_description: "Productivity metrics for different livestock categories over time",

    // System Status
    system_status: "System Status",
    system_status_description: "Synchronization status and system health information",

    // Livestock Categories
    livestock_categories: "LIVESTOCK CATEGORIES",
    all_categories: "All Categories",
    cattle: "Cattle",
    mithun: "Mithun",
    goats: "Goats",
    pigs: "Pigs",
    poultry: "Poultry",
    all_livestock: "All Livestock",

    // Animal Details
    animal_details: "Animal Details",
    animal_id: "Animal ID",
    name: "Name",
    breed: "Breed",
    age: "Age",
    weight: "Weight",
    gender: "Gender",
    male: "Male",
    female: "Female",
    category: "Category",
    device_id: "Device ID",
    added_on: "Added on",
    years: "years",
    months: "months",
    current_status: "Current Status",
    device_status: "Device Status",
    view_health_details: "View Health Details",
    view_location: "View Location",
    recent_activity: "Recent Activity",
    health_trends: "Health Trends",
    productivity_trends: "Productivity Trends",
    no_recent_alerts: "No Recent Alerts",
    veterinary_visits: "Veterinary Visits",
    treatments: "Treatments",
    schedule_vet_visit: "Schedule Vet Visit",
    location_history: "Location History",
    location_history_description: "Historical location data for this animal",
    recent_locations: "Recent Locations",
    export_location_data: "Export Location Data",
    productivity_metrics: "Productivity Metrics",
    productivity_metrics_description: "Productivity metrics and trends for this animal",
    productivity_history: "Productivity History",
    productivity_analysis: "Productivity Analysis",
    productivity_analysis_text: "Analysis of productivity trends and patterns for this animal",
    productivity_analysis_point_1: "Productivity has been steadily increasing over the past month",
    productivity_analysis_point_2: "Current performance is above average for this breed and age",
    productivity_analysis_point_3: "Seasonal variations are within expected ranges",
    recommendations: "Recommendations",
    productivity_recommendation_1: "Maintain current feeding regimen which is showing positive results",
    productivity_recommendation_2: "Consider adjusting protein intake to further improve productivity",
    productivity_recommendation_3: "Schedule regular health checks to sustain productivity levels",
    generate_detailed_report: "Generate Detailed Report",
    alerts_and_notifications: "Alerts and Notifications",
    alerts_description: "Alerts and notifications for this animal",
    alert_details_text: "Detailed information about this alert including time, location, and severity",
    no_alerts: "No Alerts",
    no_alerts_description: "There are no alerts for this animal at the moment",
    configure_alert_settings: "Configure Alert Settings",
    growth_rate: "Growth Rate",
    peak_production: "Peak Production",
    latitude: "Latitude",
    longitude: "Longitude",
    stress_level: "Stress Level",
    animal_not_found: "Animal Not Found",
    animal_not_found_description: "The animal you are looking for could not be found",
    go_back: "Go Back",
    print: "Print",
    download: "Download",
    share: "Share",
    edit: "Edit",
    delete: "Delete",
    printing: "Printing",
    printing_animal_details: "Printing animal details for",
    downloading: "Downloading",
    downloading_animal_details: "Downloading animal details for",
    sharing: "Sharing",
    sharing_animal_details: "Sharing animal details for",
    edit_animal: "Edit Animal",
    editing: "Editing",
    delete_animal: "Delete Animal",
    deleting: "Deleting",
    alert_resolved: "Alert Resolved",
    alert_resolved_description: "The alert has been marked as resolved",
    critical: "Critical",
    pending: "Pending",
    resolved: "Resolved",

    // Livestock Inventory
    livestock_inventory: "Livestock Inventory",
    manage_your: "Manage your",
    search: "Search",
    filter_by_category: "Filter by Category",
    sort_by: "Sort by",
    grid: "Grid",
    list: "List",
    id: "ID",
    actions: "Actions",
    view_details: "View Details",
    no_animals_found: "No Animals Found",
    no_animals_found_description: "No animals match your search criteria",
    clear_filters: "Clear Filters",
    export: "Export",
    export_data: "Export Data",
    export_data_description: "Exporting livestock data to CSV",
    total: "Total",

    // Other
    back: "Back",
    back_to_list: "Back to List",
    language: "Language",
    theme: "Theme",
    toggle_theme: "Toggle Theme",
    administrator: "Administrator",
    log_out: "Log Out",
    open_menu: "Open Menu",
  },
  hi: {
    // Dashboard
    dashboard: "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    dashboard_description: "‡§Ü‡§™‡§ï‡•á ‡§™‡§∂‡•Å‡§ß‡§® ‡§ï‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø, ‡§∏‡•ç‡§•‡§æ‡§® ‡§î‡§∞ ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§ï‡§§‡§æ ‡§Æ‡•á‡§ü‡•ç‡§∞‡§ø‡§ï‡•ç‡§∏ ‡§ï‡§æ ‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®",
    loading_dashboard: "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à",
    loading_dashboard_description: "‡§Ü‡§™‡§ï‡•á ‡§™‡§∂‡•Å‡§ß‡§® ‡§∏‡•á ‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§°‡•á‡§ü‡§æ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...",
    total_livestock: "‡§ï‡•Å‡§≤ ‡§™‡§∂‡•Å‡§ß‡§®",
    health_status: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•ç‡§•‡§ø‡§§‡§ø",
    recent_alerts: "‡§π‡§æ‡§≤ ‡§ï‡•á ‡§Ö‡§≤‡§∞‡•ç‡§ü",
    iot_devices: "IoT ‡§â‡§™‡§ï‡§∞‡§£",
    online: "‡§ë‡§®‡§≤‡§æ‡§á‡§®",
    offline: "‡§ë‡§´‡§≤‡§æ‡§á‡§®",
    battery_low: "‡§¨‡•à‡§ü‡§∞‡•Ä ‡§ï‡§Æ",
    healthy: "‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
    warning: "‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä",
    alert: "‡§Ö‡§≤‡§∞‡•ç‡§ü",
    view_all: "‡§∏‡§≠‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç",
    view_all_alerts: "‡§∏‡§≠‡•Ä ‡§Ö‡§≤‡§∞‡•ç‡§ü ‡§¶‡•á‡§ñ‡•á‡§Ç",
    refresh_data: "‡§°‡•á‡§ü‡§æ ‡§∞‡§ø‡§´‡•ç‡§∞‡•á‡§∂ ‡§ï‡§∞‡•á‡§Ç",
    refreshing: "‡§∞‡§ø‡§´‡•ç‡§∞‡•á‡§∂ ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...",
    data_refreshed: "‡§°‡•á‡§ü‡§æ ‡§∞‡§ø‡§´‡•ç‡§∞‡•á‡§∂ ‡§π‡•ã ‡§ó‡§Ø‡§æ",
    data_refreshed_description: "‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§°‡•á‡§ü‡§æ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§≤‡•ã‡§° ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
    add_livestock: "‡§™‡§∂‡•Å‡§ß‡§® ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    add_livestock_description: "‡§Ö‡§™‡§®‡•Ä ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§®‡§Ø‡§æ ‡§™‡§∂‡•Å‡§ß‡§® ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    add_animal: "‡§™‡§∂‡•Å ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
    add_new: "‡§®‡§Ø‡§æ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",

    // Health Monitoring
    health_monitoring: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä",
    health_monitoring_description: "‡§Ü‡§™‡§ï‡•á ‡§™‡§∂‡•Å‡§ß‡§® ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á IoT ‡§∏‡•á‡§Ç‡§∏‡§∞ ‡§∏‡•á ‡§∞‡•Ä‡§Ø‡§≤-‡§ü‡§æ‡§á‡§Æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Æ‡•á‡§ü‡•ç‡§∞‡§ø‡§ï‡•ç‡§∏",

    // Livestock Categories
    livestock_categories: "‡§™‡§∂‡•Å‡§ß‡§® ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç",
    cattle: "‡§ó‡§æ‡§Ø",
    mithun: "‡§Æ‡§ø‡§•‡•Å‡§®",
    goats: "‡§¨‡§ï‡§∞‡§ø‡§Ø‡§æ‡§Ç",
    pigs: "‡§∏‡•Ç‡§Ö‡§∞",
    poultry: "‡§Æ‡•Å‡§∞‡•ç‡§ó‡•Ä ‡§™‡§æ‡§≤‡§®",

    // Other translations would go here...
  },
  bn: {
    // Dashboard
    dashboard: "‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°",
    dashboard_description: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶∂‡ßÅ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶‡ßá‡¶∞ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø, ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶®‡¶∂‡ßÄ‡¶≤‡¶§‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï‡ßç‡¶∏‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£",
    loading_dashboard: "‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá",
    loading_dashboard_description: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶∂‡ßÅ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶ ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...",
    total_livestock: "‡¶Æ‡ßã‡¶ü ‡¶™‡¶∂‡ßÅ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶",
    health_status: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ",
    recent_alerts: "‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ",
    iot_devices: "IoT ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏",
    online: "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®",
    offline: "‡¶Ö‡¶´‡¶≤‡¶æ‡¶á‡¶®",
    battery_low: "‡¶¨‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞‡¶ø ‡¶ï‡¶Æ",
    healthy: "‡¶∏‡ßÅ‡¶∏‡ßç‡¶•",
    warning: "‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ",
    alert: "‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ",
    view_all: "‡¶∏‡¶¨ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®",
    view_all_alerts: "‡¶∏‡¶¨ ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®",
    refresh_data: "‡¶°‡¶æ‡¶ü‡¶æ ‡¶∞‡¶ø‡¶´‡ßç‡¶∞‡ßá‡¶∂ ‡¶ï‡¶∞‡ßÅ‡¶®",
    refreshing: "‡¶∞‡¶ø‡¶´‡ßç‡¶∞‡ßá‡¶∂ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...",
    data_refreshed: "‡¶°‡¶æ‡¶ü‡¶æ ‡¶∞‡¶ø‡¶´‡ßç‡¶∞‡ßá‡¶∂ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá",
    data_refreshed_description: "‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§",
    add_livestock: "‡¶™‡¶∂‡ßÅ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®",
    add_livestock_description: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø‡¶§‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡¶∂‡ßÅ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®",
    add_animal: "‡¶™‡¶∂‡ßÅ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®",
    add_new: "‡¶®‡¶§‡ßÅ‡¶® ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®",

    // Health Monitoring
    health_monitoring: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶™‡¶∞‡ßç‡¶Ø‡¶¨‡ßá‡¶ï‡ßç‡¶∑‡¶£",
    health_monitoring_description: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶∂‡ßÅ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡¶Ç‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ IoT ‡¶∏‡ßá‡¶®‡ßç‡¶∏‡¶∞ ‡¶•‡ßá‡¶ï‡ßá ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï‡ßç‡¶∏",

    // Livestock Categories
    livestock_categories: "‡¶™‡¶∂‡ßÅ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó",
    cattle: "‡¶ó‡¶∞‡ßÅ",
    mithun: "‡¶Æ‡¶ø‡¶•‡ßÅ‡¶®",
    goats: "‡¶õ‡¶æ‡¶ó‡¶≤",
    pigs: "‡¶∂‡ßÇ‡¶ï‡¶∞",
    poultry: "‡¶π‡¶æ‡¶Å‡¶∏-‡¶Æ‡ßÅ‡¶∞‡¶ó‡¶ø",

    // Other translations would go here...
  },
  as: {
    // Dashboard
    dashboard: "‡¶°‡ßá‡¶∂‡ßç‡¶¨‡¶¨‡ß∞‡ßç‡¶°",
    dashboard_description: "‡¶Ü‡¶™‡ßã‡¶®‡¶æ‡ß∞ ‡¶™‡¶∂‡ßÅ‡¶ß‡¶®‡ß∞ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø, ‡¶Ö‡ß±‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶Ü‡ß∞‡ßÅ ‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶®‡¶∂‡ßÄ‡¶≤‡¶§‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡ß∞‡¶ø‡¶ï‡ßç‡¶∏‡ß∞ ‡¶∏‡¶æ‡ß∞‡¶æ‡¶Ç‡¶∂",
    loading_dashboard: "‡¶°‡ßá‡¶∂‡ßç‡¶¨‡¶¨‡ß∞‡ßç‡¶° ‡¶≤‡ßã‡¶° ‡¶π‡ßà ‡¶Ü‡¶õ‡ßá",
    loading_dashboard_description: "‡¶Ü‡¶™‡ßã‡¶®‡¶æ‡ß∞ ‡¶™‡¶∂‡ßÅ‡¶ß‡¶®‡ß∞ ‡¶™‡ß∞‡¶æ ‡¶∂‡ßá‡¶π‡¶§‡ßÄ‡¶Ø‡¶º‡¶æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶ø ‡¶•‡¶ï‡¶æ ‡¶π‡ßà‡¶õ‡ßá...",
    total_livestock: "‡¶Æ‡ßÅ‡¶† ‡¶™‡¶∂‡ßÅ‡¶ß‡¶®",
    health_status: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡ß∞ ‡¶Ö‡ß±‡¶∏‡ßç‡¶•‡¶æ",
    recent_alerts: "‡¶∂‡ßá‡¶π‡¶§‡ßÄ‡¶Ø‡¶º‡¶æ ‡¶∏‡¶§‡ß∞‡ßç‡¶ï‡¶§‡¶æ",
    iot_devices: "IoT ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶ö",
    online: "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®",
    offline: "‡¶Ö‡¶´‡¶≤‡¶æ‡¶á‡¶®",
    battery_low: "‡¶¨‡ßá‡¶ü‡¶æ‡ß∞‡ßÄ ‡¶ï‡¶Æ",
    healthy: "‡¶∏‡ßÅ‡¶∏‡ßç‡¶•",
    warning: "‡¶∏‡¶§‡ß∞‡ßç‡¶ï‡¶§‡¶æ",
    alert: "‡¶∏‡¶§‡ß∞‡ßç‡¶ï‡¶§‡¶æ",
    view_all: "‡¶∏‡¶ï‡¶≤‡ßã ‡¶ö‡¶æ‡¶ì‡¶ï",
    view_all_alerts: "‡¶∏‡¶ï‡¶≤‡ßã ‡¶∏‡¶§‡ß∞‡ßç‡¶ï‡¶§‡¶æ ‡¶ö‡¶æ‡¶ì‡¶ï",
    refresh_data: "‡¶§‡¶•‡ßç‡¶Ø ‡ß∞‡¶ø‡¶´‡ßç‡ß∞‡ßá‡¶∂‡ßç‡¶¨ ‡¶ï‡ß∞‡¶ï",
    refreshing: "‡ß∞‡¶ø‡¶´‡ßç‡ß∞‡ßá‡¶∂‡ßç‡¶¨ ‡¶π‡ßà ‡¶Ü‡¶õ‡ßá...",
    data_refreshed: "‡¶§‡¶•‡ßç‡¶Ø ‡ß∞‡¶ø‡¶´‡ßç‡ß∞‡ßá‡¶∂‡ßç‡¶¨ ‡¶π'‡¶≤",
    data_refreshed_description: "‡¶∂‡ßá‡¶π‡¶§‡ßÄ‡¶Ø‡¶º‡¶æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶´‡¶≤‡¶§‡¶æ‡ß∞‡ßá ‡¶≤‡ßã‡¶° ‡¶ï‡ß∞‡¶æ ‡¶π'‡¶≤‡•§",
    add_livestock: "‡¶™‡¶∂‡ßÅ‡¶ß‡¶® ‡¶Ø‡ßã‡¶ó ‡¶ï‡ß∞‡¶ï",
    add_livestock_description: "‡¶Ü‡¶™‡ßã‡¶®‡¶æ‡ß∞ ‡¶á‡¶®‡¶≠‡ßá‡¶£‡ßç‡¶ü‡ß∞‡ßÄ‡¶§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡¶∂‡ßÅ‡¶ß‡¶® ‡¶Ø‡ßã‡¶ó ‡¶ï‡ß∞‡¶ï",
    add_animal: "‡¶™‡¶∂‡ßÅ ‡¶Ø‡ßã‡¶ó ‡¶ï‡ß∞‡¶ï",
    add_new: "‡¶®‡¶§‡ßÅ‡¶® ‡¶Ø‡ßã‡¶ó ‡¶ï‡ß∞‡¶ï",

    // Health Monitoring
    health_monitoring: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶™‡ß∞‡ßç‡¶Ø‡¶¨‡ßá‡¶ï‡ßç‡¶∑‡¶£",
    health_monitoring_description: "‡¶Ü‡¶™‡ßã‡¶®‡¶æ‡ß∞ ‡¶™‡¶∂‡ßÅ‡¶ß‡¶®‡ß∞ ‡¶≤‡¶ó‡¶§ ‡¶∏‡¶Ç‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ IoT ‡¶õ‡ßá‡¶®‡ßç‡¶∏‡ß∞‡ß∞ ‡¶™‡ß∞‡¶æ ‡ß∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶Æ‡ßá‡¶ü‡ßç‡ß∞‡¶ø‡¶ï‡ßç‡¶∏",

    // Livestock Categories
    livestock_categories: "‡¶™‡¶∂‡ßÅ‡¶ß‡¶® ‡¶∂‡ßç‡ß∞‡ßá‡¶£‡ßÄ",
    cattle: "‡¶ó‡ß∞‡ßÅ",
    mithun: "‡¶Æ‡¶ø‡¶•‡ßÅ‡¶®",
    goats: "‡¶õ‡¶æ‡¶ó‡¶≤‡ßÄ",
    pigs: "‡¶ó‡¶æ‡¶π‡ß∞‡¶ø",
    poultry: "‡¶ï‡ßÅ‡¶ï‡ßÅ‡ß∞‡¶æ-‡¶π‡¶æ‡¶Å‡¶π",

    // Other translations would go here...
  },
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

export function LanguageProvider({ children }: { children: ReactNode }) {
  const [currentLanguage, setCurrentLanguage] = useState<Language>(languages[0])

  // Load saved language preference from localStorage on component mount
  useEffect(() => {
    const savedLanguageCode = localStorage.getItem("preferredLanguage")
    if (savedLanguageCode) {
      const language = languages.find((lang) => lang.code === savedLanguageCode)
      if (language) {
        setCurrentLanguage(language)
      }
    }
  }, [])

  const handleSetLanguage = (language: Language) => {
    setCurrentLanguage(language)

    localStorage.setItem("preferredLanguage", language.code)
  }

  const t = (key: string) => {
    return translations[currentLanguage.code]?.[key] || key
  }

  return (
    <LanguageContext.Provider value={{ currentLanguage, languages, setLanguage: handleSetLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  )
}

export function useLanguage() {
  const context = useContext(LanguageContext)
  if (context === undefined) {
    throw new Error("useLanguage must be used within a LanguageProvider")
  }
  return context
}
